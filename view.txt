import hashlib
from operator import or_

from flask import Blueprint, request, render_template, redirect, url_for

from apps.user.models import User
from exts import db

user_bp = Blueprint('user', __name__)


@user_bp.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        username = request.form.get('username')
        password = request.form.get('password')
        repassword = request.form.get('repassword')
        phone = request.form.get('phone')
        if password == repassword:
            # 与模型结合
            user = User()
            user.username = username
            user.password = password
            # user.password = hashlib.sha256(password.encode('utf-8')).hexdigest()
            user.phone = phone
            # 往数据库里添加数据
            db.session.add(user)
            db.session.commit()
            # return '用户注册成功'
            return redirect(url_for('user.user_center'))
            # return redirect('/') 或 return redirect(url_for('user.user_center'))
        else:
            return '两次密码不一致'
        # for user in users:
        #     if user.username == realname:
        #         user.username = username
        #         user.phone = phone
        #         return redirect('/')
    return render_template('user/register.html')


@user_bp.route('/')
def user_center():
    # 查询数据库中的数据
    users = User.query.all()
    # users = User.query.filter(User.isdelete == False).all()  # 列表 对象
    return render_template('user/center.html', users=users)


@user_bp.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form.get('username')
        password = request.form.get('password')
        # p = hashlib.sha256(password.encode('utf-8')).hexdigest()  如果使用了加密
        r = User.query.filter_by(username=username).all()
        # if r.password == password:
        #     return '登录成功'
        if len(r):
            for u in r:
                if u.password == password:
                    return '登录成功'
                else:
                    return render_template('user/login.html', msg='用户名或密码错误')
        else:
            return render_template('user/login.html', msg='用户名或密码错误')

    return render_template('user/login.html')


@user_bp.route('/search')
def search():
    keyword = request.args.get('search')
    user_list = User.query.filter(
        or_(User.username.contains(keyword), User.phone.contains(keyword)))
    return render_template('user/center.html', users=user_list)


@user_bp.route('/delete')
def delete():
    id = request.args.get('id')
    # user = User.query.get(id)
    # user.isdelete = True
    # db.session.commit()
    user = User.query.get(id)
    db.session.delete(user)
    db.session.commit()
    return redirect(url_for('user.user_center'))


@user_bp.route('/update', methods=['GET', 'POST'])
def update():
    if request.method == 'POST':
        username = request.form.get('username')
        phone = request.form.get('phone')
        id = request.form.get('id')
        user = User.query.get(id)
        user.phone = phone
        user.username = username
        db.session.commit()
        return redirect(url_for('user.user_center'))
    else:
        id = request.args.get('id')
        user = User.query.get(id)

        return render_template('user/update.html', user=user)
